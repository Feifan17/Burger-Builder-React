{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/UI/Navigation/SideDrawer/SiderDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Input/Input.module.css","components/UI/Navigation/ToolBar/ToolBar.module.css","components/UI/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","components/Order/Order.module.css","assets/images/burger-logo.png","components/UI/Logo/Logo.module.css","components/UI/Navigation/NavigationItems/NavigationItems.module.css","components/UI/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/Layout/Layout.module.css","components/UI/BackDrop/BackDrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/Checkout/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","containers/Auth/Auth.module.css","axios-orders.js","store/actions/auth.js","store/actions/actionTypes.js","components/UI/Logo/Logo.js","components/UI/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/UI/Navigation/NavigationItems/NavigationItems.js","components/UI/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/UI/Navigation/ToolBar/ToolBar.js","components/UI/BackDrop/BackDrop.js","components/UI/Navigation/SideDrawer/SideDrawer.js","components/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/order.js","components/Order/Checkout/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["module","exports","instance","axios","create","baseURL","authSuccess","idToken","userId","type","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","setAuthRedirectPath","path","Logo","props","className","classes","style","height","src","burgerLogo","alt","NavigationItem","exact","to","link","activeClassName","active","children","NavigationItems","isAuthenticated","DrawerToggle","onClick","clicked","ToolBar","sideDrawerToggleClicked","DesktopOnly","BackDrop","show","SiderDrawer","attacedClasses","Close","open","Open","closed","join","Layout","sideDrawerClosedHandler","setState","showSideDrawer","sideDrawerToggleHandler","prevState","state","this","Content","Component","connect","auth","token","BurgerIngredient","ingredient","BreadBottom","BreadTop","Meat","Cheese","Salad","Bacon","Burger","transformedIngredients","Object","keys","ingredients","count","i","push","key","length","BuildControl","Label","label","Less","deleteIngredient","disabled","More","addIngredient","controls","BuildControls","price","map","control","bind","disabledBtnInfo","OrderButton","orderState","order","Modal","nextProps","nextState","modalClosed","transform","opacity","Button","btnType","OrderSummary","ingredientSummary","igKey","textTransform","cancelOrder","continueOrder","Spinner","loader","errorHandler","WrappedComponent","errorConfirmedHandler","error","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","err","eject","reqinterceptor","resinterceptor","message","BurgerBuilder","updateOrderState","totalPrice","showModalHandler","showModal","onSetAuthRedirectPath","history","closeModalHandler","cancelOrderHandler","continueOrderHandler","onInitPurchase","onInitIngredient","orderSummary","burger","onIngredientAdded","onIngredientRemoved","burgerBuilder","ingredientName","actions","get","then","data","catch","withErrorHandler","CheckoutSummary","width","margin","cancel","continue","Input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","value","elementConfig","onChange","changed","options","option","displayValue","ContactData","orderHandler","event","preventDefault","formData","formElementId","orderForm","orderData","onOrderBurger","inputChangeHandler","inputId","updatedOrderForm","updatedFormElement","target","valid","checkInputValidity","validation","formIsValid","name","placeholder","required","street","zipCode","minLength","maxLength","country","email","deliveryMethod","rules","isValid","trim","formElementsArray","id","config","form","onSubmit","formElement","loading","post","orderId","purchaseBurgerSuccess","Checkout","checkoutCancelHandler","goBack","checkoutContinueHandler","replace","summary","purchasedRedirect","purchased","match","component","Order","amount","ingredientOutput","OrderInfo","Number","parseFloat","toFixed","Orders","onFetchOrders","orders","queryParams","fetchedOrders","Auth","controlName","updatedControls","submitHandler","onAuth","password","isSignup","switchAuthModelHandler","isEmail","buildingBurger","authRedirectPath","errorMessage","authRedirect","isBuilding","authData","returnSecureToken","url","Date","getTime","expiresIn","setItem","localId","authFail","Logout","onLogout","App","onTryAutoSignup","routes","withRouter","getItem","Boolean","window","location","hostname","initialState","INGREDIENT_PRICES","salad","bacon","cheese","meat","reducer","action","newOrder","concat","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.48fa37bd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2US69\",\"BreadTop\":\"BurgerIngredient_BreadTop__3Y4-R\",\"Seeds1\":\"BurgerIngredient_Seeds1__J6vUJ\",\"Seeds2\":\"BurgerIngredient_Seeds2__2Ylex\",\"Meat\":\"BurgerIngredient_Meat__3flwI\",\"Cheese\":\"BurgerIngredient_Cheese__3rOTJ\",\"Salad\":\"BurgerIngredient_Salad__KLnhy\",\"Bacon\":\"BurgerIngredient_Bacon__1KK6n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SiderDrawer\":\"SiderDrawer_SiderDrawer__1xqPV\",\"Open\":\"SiderDrawer_Open__12Hyi\",\"Close\":\"SiderDrawer_Close__Mcv7i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__O8649\",\"Label\":\"BuildControl_Label__TQkTk\",\"Less\":\"BuildControl_Less__3Ttg8\",\"More\":\"BuildControl_More__1MY7B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"Label\":\"Input_Label__1qyHr\",\"InputElement\":\"Input_InputElement__2m88K\",\"Invalid\":\"Input_Invalid__16Mis\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ToolBar\":\"ToolBar_ToolBar__1mqkj\",\"DesktopOnly\":\"ToolBar_DesktopOnly__1Xdb5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__1Hb5v\",\"active\":\"NavigationItem_active__39N3a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1YmbS\",\"OrderButton\":\"BuildControls_OrderButton___M-Du\",\"enable\":\"BuildControls_enable__9xLsD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"Success\":\"Button_Success__2Rka1\",\"Danger\":\"Button_Danger__2ogZq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3kYZJ\",\"OrderInfo\":\"Order_OrderInfo__2a3m0\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__3ME4O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1x0ow\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__LHVqk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__2WLOk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BackDrop\":\"BackDrop_BackDrop__2O2aY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__10T8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1-5dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Spinner_loader__fTuX5\",\"load6\":\"Spinner_load6__1_74m\",\"round\":\"Spinner_round__3G_CY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__3b4mW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__20AK_\",\"Input\":\"ContactData_Input__2fK5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__1Zul_\"};","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://burgerbuilder-5437d.firebaseio.com\"\n});\n\nexport default instance;\n","import * as actionTypes from \"./actionTypes\";\nimport axios from \"axios\";\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\n\nexport const authSuccess = (idToken, userId) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    idToken: idToken,\n    userId: userId\n  };\n};\n\nexport const authFail = err => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: err\n  };\n};\n\nexport const logout = () => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"expirationTime\");\n  localStorage.removeItem(\"userId\");\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\n\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\n\nexport const auth = (email, password, isSignup) => {\n  return dispatch => {\n    dispatch(authStart());\n    const authData = {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    };\n\n    let url =\n      \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyA3EhwXG-DfYR4hqIF5D6IE_DGKtlc3jdQ\";\n\n    if (!isSignup) {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyA3EhwXG-DfYR4hqIF5D6IE_DGKtlc3jdQ\";\n    }\n    axios\n      .post(url, authData)\n      .then(res => {\n        const expirationTime = new Date(\n          new Date().getTime() + res.data.expiresIn * 1000\n        );\n        localStorage.setItem(\"token\", res.data.idToken);\n        localStorage.setItem(\"expirationTime\", expirationTime);\n        localStorage.setItem(\"userId\", res.data.localId);\n        dispatch(authSuccess(res.data.idToken, res.data.localId));\n        dispatch(checkAuthTimeout(res.data.expiresIn));\n      })\n      .catch(err => {\n        dispatch(authFail(err.response.data.error.message));\n      });\n  };\n};\n\nexport const setAuthRedirectPath = path => {\n  return {\n    type: actionTypes.SET_AUTH_REDIRECT_PATH,\n    path: path\n  };\n};\n\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      dispatch(logout());\n    } else {\n      const expirationTime = new Date(localStorage.getItem(\"expirationTime\"));\n      if (expirationTime > new Date()) {\n        const userId = localStorage.getItem(\"userId\");\n        dispatch(authSuccess(token, userId));\n        dispatch(\n          checkAuthTimeout(\n            (expirationTime.getTime() - new Date().getTime()) / 1000\n          )\n        );\n      } else {\n        dispatch(logout());\n      }\n    }\n  };\n};\n","export const ADD_INGREDIENT = \"ADD_INGREDIENT\";\nexport const REMOVE_INGREDIENT = \"REMOVE_INGREDIENT\";\nexport const SET_INGREDIENTS = \"SET_INGREDIENTS\";\nexport const FETCH_INGREDIENTS_FAILED = \"FETCH_INGREDIENTS_FAILED\";\n\nexport const PURCHASE_BURGER_START = \"PURCHASE_BURGER_START\";\nexport const PURCHASE_BURGER_SUCCESS = \"PURCHASE_BURGER_SUCCESS\";\nexport const PURCHASE_BURGER_FAIL = \"PURCHASE_BURGER_FAIL\";\nexport const PURCHASE_INIT = \"PURCHASE_INIT\";\n\nexport const FETCH_ORDERS_START = \"FETCH_ORDERS_INIT\";\nexport const FETCH_ORDERS_SUCCESS = \"FETCH_ORDERS_SUCCESS\";\nexport const FETCH_ORDERS_FAIL = \"FETCH_ORDERS_FAIL\";\n\nexport const AUTH_START = \"AUTH_START\";\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\nexport const AUTH_FAIL = \"AUTH_FAIL\";\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\n\nexport const SET_AUTH_REDIRECT_PATH = \"SET_AUTH_REDIRECT_PATH\";\n","import React from \"react\";\nimport burgerLogo from \"../../../assets/images/burger-logo.png\";\nimport classes from \"./Logo.module.css\";\n\nfunction Logo(props) {\n  return (\n    <div className={classes.Logo} style={{ height: props.height }}>\n      <img src={burgerLogo} alt=\"MyBurger\" />\n    </div>\n  );\n}\n\nexport default Logo;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport classes from \"./NavigationItem.module.css\";\n\nfunction NavigationItem(props) {\n  return (\n    <li className={classes.NavigationItem}>\n      <NavLink exact to={props.link} activeClassName={classes.active}>\n        {props.children}\n      </NavLink>\n    </li>\n  );\n}\n\nexport default NavigationItem;\n","import React from \"react\";\nimport classes from \"./NavigationItems.module.css\";\nimport NavigationItem from \"./NavigationItem/NavigationItem\";\n\nfunction NavigationItems(props) {\n  return (\n    <ul className={classes.NavigationItems}>\n      <NavigationItem link=\"/\">Burger Builder</NavigationItem>\n      {props.isAuthenticated ? (\n        <NavigationItem link=\"/orders\">Orders</NavigationItem>\n      ) : null}\n      {props.isAuthenticated ? (\n        <NavigationItem link=\"/logout\">Logout</NavigationItem>\n      ) : (\n        <NavigationItem link=\"/auth\">Authenticate</NavigationItem>\n      )}\n    </ul>\n  );\n}\n\nexport default NavigationItems;\n","import React from \"react\";\nimport classes from \"./DrawerToggle.module.css\";\n\nfunction DrawerToggle(props) {\n  return (\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n}\n\nexport default DrawerToggle;\n","import React from \"react\";\nimport classes from \"./ToolBar.module.css\";\nimport Logo from \"../../Logo/Logo\";\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\nimport DrawerToggle from \"../SideDrawer/DrawerToggle/DrawerToggle\";\n\nfunction ToolBar(props) {\n  return (\n    <header className={classes.ToolBar}>\n      <DrawerToggle clicked={props.sideDrawerToggleClicked}></DrawerToggle>\n      <Logo height=\"80%\"></Logo>\n      <nav className={classes.DesktopOnly}>\n        <NavigationItems isAuthenticated={props.isAuthenticated} />\n      </nav>\n    </header>\n  );\n}\n\nexport default ToolBar;\n","import React from \"react\";\nimport classes from \"./BackDrop.module.css\";\n\nfunction BackDrop(props) {\n  const backdrop = props.show ? (\n    <div className={classes.BackDrop} onClick={props.clicked}></div>\n  ) : null;\n  return backdrop;\n}\n\nexport default BackDrop;\n","import React, { Fragment } from \"react\";\nimport Logo from \"../../Logo/Logo\";\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\nimport classes from \"./SiderDrawer.module.css\";\nimport BackDrop from \"../../BackDrop/BackDrop\";\n\nfunction SiderDrawer(props) {\n  let attacedClasses = [classes.SiderDrawer, classes.Close];\n  if (props.open) {\n    attacedClasses = [classes.SiderDrawer, classes.Open];\n  }\n\n  return (\n    <Fragment>\n      <BackDrop show={props.open} clicked={props.closed}></BackDrop>\n      <div className={attacedClasses.join(\" \")}>\n        <Logo height=\"11%\" />\n        <nav>\n          <NavigationItems></NavigationItems>\n        </nav>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default SiderDrawer;\n","import React, { Fragment, Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ToolBar from \"../UI/Navigation/ToolBar/ToolBar\";\nimport classes from \"./Layout.module.css\";\nimport SiderDrawer from \"../UI/Navigation/SideDrawer/SideDrawer\";\n\nclass Layout extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSideDrawer: false\n    };\n  }\n\n  sideDrawerClosedHandler = () => {\n    this.setState({\n      showSideDrawer: false\n    });\n  };\n\n  sideDrawerToggleHandler = () => {\n    this.setState(prevState => {\n      return {\n        showSideDrawer: !prevState.showSideDrawer\n      };\n    });\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <ToolBar\n          isAuthenticated={this.props.isAuthenticated}\n          sideDrawerToggleClicked={this.sideDrawerToggleHandler}\n        ></ToolBar>\n        <SiderDrawer\n          open={this.state.showSideDrawer}\n          closed={this.sideDrawerClosedHandler}\n        ></SiderDrawer>\n        <main className={classes.Content}>{this.props.children}</main>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nexport default connect(mapStateToProps)(Layout);\n","import React from \"react\";\n\nimport classes from \"./BurgerIngredient.module.css\";\n\nfunction BurgerIngredient(props) {\n  let ingredient = null;\n\n  switch (props.type) {\n    case \"bread-bottom\": {\n      ingredient = <div className={classes.BreadBottom}></div>;\n      break;\n    }\n    case \"bread-top\": {\n      ingredient = <div className={classes.BreadTop}></div>;\n      break;\n    }\n\n    case \"meat\": {\n      ingredient = <div className={classes.Meat}></div>;\n      break;\n    }\n    case \"cheese\": {\n      ingredient = <div className={classes.Cheese}></div>;\n      break;\n    }\n    case \"salad\": {\n      ingredient = <div className={classes.Salad}></div>;\n      break;\n    }\n    case \"bacon\": {\n      ingredient = <div className={classes.Bacon}></div>;\n      break;\n    }\n    default:\n      ingredient = null;\n      break;\n  }\n  return ingredient;\n}\n\nexport default BurgerIngredient;\n","import React from \"react\";\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\";\nimport classes from \"./Burger.module.css\";\n\nfunction Burger(props) {\n  let transformedIngredients = [];\n\n  for (let ingredient of Object.keys(props.ingredients)) {\n    const count = props.ingredients[ingredient];\n    for (let i = 0; i < count; i++) {\n      transformedIngredients.push(\n        <BurgerIngredient key={ingredient + i} type={ingredient} />\n      );\n    }\n  }\n\n  if (transformedIngredients.length === 0) {\n    transformedIngredients = <p>Please start adding ingredients.</p>;\n  }\n\n  return (\n    <div className={classes.Burger}>\n      <BurgerIngredient type=\"bread-top\"></BurgerIngredient>\n      {transformedIngredients}\n      <BurgerIngredient type=\"bread-bottom\"></BurgerIngredient>\n    </div>\n  );\n}\n\nexport default Burger;\n","import React from \"react\";\nimport classes from \"./BuildControl.module.css\";\n\nfunction BuildControl(props) {\n  return (\n    <div className={classes.BuildControl}>\n      <div className={classes.Label}>{props.label}</div>\n      <button\n        className={classes.Less}\n        onClick={props.deleteIngredient}\n        disabled={props.disabled}\n      >\n        Less\n      </button>\n      <button className={classes.More} onClick={props.addIngredient}>\n        More\n      </button>\n    </div>\n  );\n}\n\nexport default BuildControl;\n","import React from \"react\";\nimport classes from \"./BuildControls.module.css\";\nimport BuildControl from \"./BuildControl/BuildControl\";\n\nconst controls = [\n  { label: \"Salad\", type: \"salad\" },\n  { label: \"Bacon\", type: \"bacon\" },\n  { label: \"Cheese\", type: \"cheese\" },\n  { label: \"Meat\", type: \"meat\" }\n];\n\nfunction BuildControls(props) {\n  return (\n    <div className={classes.BuildControls}>\n      <h3>Price: ${props.price}</h3>\n      {controls.map(control => (\n        <BuildControl\n          key={control.label}\n          label={control.label}\n          addIngredient={props.addIngredient.bind(this, control.type)}\n          deleteIngredient={props.deleteIngredient.bind(this, control.type)}\n          disabled={props.disabledBtnInfo[control.type]}\n        />\n      ))}\n      <button\n        className={classes.OrderButton}\n        disabled={!props.orderState}\n        onClick={props.order}\n      >\n        {props.isAuthenticated ? \"Order Now\" : \"Sign Up to Order\"}\n      </button>\n    </div>\n  );\n}\n\nexport default BuildControls;\n","import React, { Component, Fragment } from \"react\";\nimport classes from \"./Modal.module.css\";\nimport BackDrop from \"../BackDrop/BackDrop\";\n\nclass Modal extends Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    return (\n      nextProps.show !== this.props.show ||\n      nextProps.children !== this.props.children\n    );\n  }\n  render() {\n    return (\n      <Fragment>\n        <BackDrop show={this.props.show} clicked={this.props.modalClosed} />\n        <div\n          className={classes.Modal}\n          style={{\n            transform: this.props.show ? \"translateY(0)\" : \"translateY(-100vh)\",\n            opacity: this.props.show ? \"1\" : \"0\"\n          }}\n        >\n          {this.props.children}\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default Modal;\n","import React from \"react\";\nimport classes from \"./Button.module.css\";\n\nfunction Button(props) {\n  return (\n    <button\n      disabled={props.disabled}\n      className={[classes.Button, classes[props.btnType]].join(\" \")}\n      onClick={props.clicked}\n    >\n      {props.children}\n    </button>\n  );\n}\n\nexport default Button;\n","import React, { Component, Fragment } from \"react\";\nimport Button from \"../../UI/Button/Button\";\n\nclass OrderSummary extends Component {\n  render() {\n    const ingredientSummary = Object.keys(this.props.ingredients).map(igKey => {\n      return (\n        <li key={igKey}>\n          <span style={{ textTransform: \"capitalize\" }}>{igKey}</span>:{\" \"}\n          {this.props.ingredients[igKey]}{\" \"}\n        </li>\n      );\n    });\n    return (\n      <Fragment>\n        <h3>Order Summary</h3>\n        <ul>{ingredientSummary}</ul>\n        <h4>Total Price: ${this.props.price}</h4>\n        <p>Continue to checkout?</p>\n        <Button btnType=\"Danger\" clicked={this.props.cancelOrder}>\n          Cancel\n        </Button>\n        <Button btnType=\"Success\" clicked={this.props.continueOrder}>\n          Continue\n        </Button>\n      </Fragment>\n    );\n  }\n}\n\nexport default OrderSummary;\n","import React from \"react\";\nimport classes from \"./Spinner.module.css\";\n\nfunction Spinner(props) {\n  return <div className={classes.loader}>Loading...</div>;\n}\nexport default Spinner;\n","import React, { Component, Fragment } from \"react\";\nimport Modal from \"../../components/UI/Modal/Modal\";\n\nconst errorHandler = (WrappedComponent, axios) => {\n  return class extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        error: null\n      };\n    }\n\n    componentWillMount() {\n      this.reqInterceptor = axios.interceptors.request.use(req => {\n        this.setState({ error: null });\n        return req;\n      });\n      this.resInterceptor = axios.interceptors.response.use(\n        res => res,\n        err => {\n          this.setState({ error: err });\n        }\n      );\n    }\n\n    componentWillUnmount() {\n      axios.interceptors.request.eject(this.reqinterceptor);\n      axios.interceptors.response.eject(this.resinterceptor);\n    }\n\n    errorConfirmedHandler = () => {\n      this.setState({ error: null });\n    };\n\n    render() {\n      return (\n        <Fragment>\n          <Modal\n            show={this.state.error}\n            modalClosed={this.errorConfirmedHandler}\n          >\n            {this.state.error ? this.state.error.message : null}\n          </Modal>\n          <WrappedComponent {...this.props} />\n        </Fragment>\n      );\n    }\n  };\n};\n\nexport default errorHandler;\n","import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\n// Components.\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\n// Redux action types.\nimport * as actions from \"../../store/actions/index\";\n// Axios instance.\nimport axios from \"../../axios-orders\";\n\nclass BurgerBuilder extends Component {\n  // Constructor method.\n  constructor(props) {\n    super(props);\n    this.state = {\n      showModal: false\n    };\n  }\n\n  componentDidMount() {\n    this.props.onInitIngredient();\n  }\n\n  // Enable order button only when price is greater than 0.\n  updateOrderState = () => {\n    return this.props.totalPrice > 0;\n  };\n\n  showModalHandler = () => {\n    if (this.props.isAuthenticated) {\n      this.setState({\n        showModal: true\n      });\n    } else {\n      this.props.onSetAuthRedirectPath(\"/checkout\");\n      this.props.history.push(\"/auth\");\n    }\n  };\n\n  closeModalHandler = () => {\n    this.setState({\n      showModal: false\n    });\n  };\n\n  cancelOrderHandler = () => {\n    this.setState({\n      showModal: false\n    });\n  };\n\n  continueOrderHandler = () => {\n    this.props.onInitPurchase();\n    this.props.history.push(\"/checkout\");\n  };\n\n  // Render the component.\n  render() {\n    // If the count of an ingredient is less than or equal to 0, disable the delete button.\n    const disabledBtnInfo = {\n      ...this.props.ingredients\n    };\n    for (let key in disabledBtnInfo) {\n      disabledBtnInfo[key] = disabledBtnInfo[key] <= 0;\n    }\n\n    let orderSummary = null;\n\n    let burger = this.props.error ? (\n      <p>Ingredients can't be loaded</p>\n    ) : (\n      <Spinner />\n    );\n\n    if (this.props.ingredients) {\n      burger = (\n        <Fragment>\n          <Burger ingredients={this.props.ingredients} />\n          <BuildControls\n            addIngredient={this.props.onIngredientAdded}\n            deleteIngredient={this.props.onIngredientRemoved}\n            disabledBtnInfo={disabledBtnInfo}\n            price={this.props.totalPrice}\n            orderState={this.updateOrderState()}\n            order={this.showModalHandler}\n            isAuthenticated={this.props.isAuthenticated}\n          />\n        </Fragment>\n      );\n\n      orderSummary = (\n        <OrderSummary\n          cancelOrder={this.cancelOrderHandler}\n          continueOrder={this.continueOrderHandler}\n          ingredients={this.props.ingredients}\n          price={this.props.totalPrice}\n        ></OrderSummary>\n      );\n    }\n\n    return (\n      <Fragment>\n        <Modal show={this.state.showModal} modalClosed={this.closeModalHandler}>\n          {orderSummary}\n        </Modal>\n        {burger}\n      </Fragment>\n    );\n  }\n}\n\n// Redux setup.\nconst mapStateToProps = state => {\n  return {\n    ingredients: state.burgerBuilder.ingredients,\n    totalPrice: state.burgerBuilder.totalPrice,\n    error: state.burgerBuilder.error,\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIngredientAdded: ingredientName =>\n      dispatch(actions.addIngredient(ingredientName)),\n    onIngredientRemoved: ingredientName =>\n      dispatch(actions.removeIngredient(ingredientName)),\n    onInitIngredient: () => dispatch(actions.initIngredients()),\n    onInitPurchase: () => dispatch(actions.purchaseInit()),\n    onSetAuthRedirectPath: path => dispatch(actions.setAuthRedirectPath(path))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withErrorHandler(BurgerBuilder, axios));\n","import * as actionTypes from \"./actionTypes\";\n// Axios instance.\nimport axios from \"../../axios-orders\";\n\nexport const addIngredient = ingredientName => {\n  return {\n    type: actionTypes.ADD_INGREDIENT,\n    ingredientName: ingredientName\n  };\n};\n\nexport const removeIngredient = ingredientName => {\n  return {\n    type: actionTypes.REMOVE_INGREDIENT,\n    ingredientName: ingredientName\n  };\n};\n\nexport const setIngredients = ingredients => {\n  return {\n    type: actionTypes.SET_INGREDIENTS,\n    ingredients: ingredients\n  };\n};\n\nexport const fetchIngredientsFailed = () => {\n  return {\n    type: actionTypes.FETCH_INGREDIENTS_FAILED\n  };\n};\n\nexport const initIngredients = () => {\n  return dispatch => {\n    axios\n      .get(\"/ingredients.json\")\n      .then(res => {\n        dispatch(setIngredients(res.data));\n      })\n      .catch(err => {\n        dispatch(fetchIngredientsFailed());\n      });\n  };\n};\n","import * as actionTypes from \"./actionTypes\";\nimport axios from \"../../axios-orders\";\n\nexport const purchaseBurgerSuccess = (id, orderData) => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_SUCCESS,\n    orderId: id,\n    orderData: orderData\n  };\n};\n\nexport const purchaseBurgerFail = error => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_FAIL,\n    error: error\n  };\n};\n\nexport const purchaseBurgerStart = () => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_START\n  };\n};\n\nexport const purchaseBurger = (orderData, token) => {\n  return dispatch => {\n    dispatch(purchaseBurgerStart());\n    // Send post request to firebase.\n    axios\n      .post(\"/orders.json?auth=\" + token, orderData)\n      .then(res => {\n        dispatch(purchaseBurgerSuccess(res.data.name, orderData));\n      })\n      .catch(err => {\n        dispatch(purchaseBurgerFail(err));\n      });\n  };\n};\n\nexport const purchaseInit = () => {\n  return {\n    type: actionTypes.PURCHASE_INIT\n  };\n};\n\nexport const fetchOrdersSuccess = orders => {\n  return {\n    type: actionTypes.FETCH_ORDERS_SUCCESS,\n    orders: orders\n  };\n};\n\nexport const fetchOrdersFail = error => {\n  return {\n    type: actionTypes.FETCH_ORDERS_FAIL,\n    error: error\n  };\n};\n\nexport const fetchOrdersStart = error => {\n  return {\n    type: actionTypes.FETCH_ORDERS_START\n  };\n};\n\nexport const fetchOrders = (token, userId) => {\n  return dispatch => {\n    dispatch(fetchOrdersStart());\n    // Fetch the orders from the firebase.\n    const queryParams =\n      \"?auth=\" + token + `&orderBy=\"userId\"&equalTo=\"${userId}\" `;\n    axios\n      .get(\"/orders.json\" + queryParams)\n      .then(res => {\n        const fetchedOrders = [];\n        for (let key in res.data) {\n          fetchedOrders.push({\n            ...res.data[key],\n            id: key\n          });\n        }\n        dispatch(fetchOrdersSuccess(fetchedOrders));\n      })\n      .catch(err => {\n        dispatch(fetchOrdersFail(err));\n      });\n  };\n};\n","import React from \"react\";\nimport Burger from \"../../../Burger/Burger\";\nimport Button from \"../../../UI/Button/Button\";\nimport classes from \"./CheckoutSummary.module.css\";\n\nfunction CheckoutSummary(props) {\n  return (\n    <div className={classes.CheckoutSummary}>\n      <h1>Here is your burger: </h1>\n      <div style={{ width: \"100%\", margin: \"auto\" }}>\n        <Burger ingredients={props.ingredients} />\n      </div>\n      <Button btnType=\"Danger\" clicked={props.cancel}>\n        CANCEL\n      </Button>\n      <Button btnType=\"Success\" clicked={props.continue}>\n        CONTINUE\n      </Button>\n    </div>\n  );\n}\n\nexport default CheckoutSummary;\n","import React from \"react\";\nimport classes from \"./Input.module.css\";\n\nfunction Input(props) {\n  let inputElement = null;\n  const inputClasses = [classes.InputElement];\n\n  if (props.invalid && props.shouldValidate && props.touched) {\n    inputClasses.push(classes.Invalid);\n  }\n\n  switch (props.elementType) {\n    case \"input\":\n      inputElement = (\n        <input\n          value={props.value}\n          {...props.elementConfig}\n          className={inputClasses.join(\" \")}\n          onChange={props.changed}\n        />\n      );\n      break;\n    case \"textarea\":\n      inputElement = (\n        <textarea\n          value={props.value}\n          {...props.elementConfig}\n          className={inputClasses.join(\" \")}\n          onChange={props.changed}\n        />\n      );\n      break;\n    case \"select\":\n      inputElement = (\n        <select\n          value={props.value}\n          className={inputClasses.join(\" \")}\n          onChange={props.changed}\n        >\n          {props.elementConfig.options.map(option => {\n            return (\n              <option key={option.value} value={option.value}>\n                {option.displayValue}\n              </option>\n            );\n          })}\n        </select>\n      );\n      break;\n    default:\n      inputElement = (\n        <input\n          value={props.value}\n          {...props.elementConfig}\n          className={inputClasses.join(\" \")}\n        />\n      );\n      break;\n  }\n\n  return (\n    <div className={classes.Input}>\n      <label className={classes.Label}>{props.label}</label>\n      {inputElement}\n    </div>\n  );\n}\n\nexport default Input;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n// Components.\nimport Button from \"../../../components/UI/Button/Button\";\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\nimport Input from \"../../../components/UI/Input/Input\";\nimport withErrorHandler from \"../../../hoc/withErrorHandler/withErrorHandler\";\n// CSS.\nimport classes from \"./ContactData.module.css\";\n// Axios instance.\nimport axios from \"../../../axios-orders\";\nimport * as actions from \"../../../store/actions/index\";\n\nclass ContactData extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // Manage order submission form.\n      orderForm: {\n        name: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"Your Name\"\n          },\n          value: \"\",\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false\n        },\n        street: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"Street\"\n          },\n          value: \"\",\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false\n        },\n        zipCode: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"ZIP Code\"\n          },\n          value: \"\",\n          validation: {\n            required: true,\n            minLength: 5,\n            maxLength: 5\n          },\n          valid: false,\n          touched: false\n        },\n        country: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"Country\"\n          },\n          value: \"\",\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false\n        },\n        email: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"email\",\n            placeholder: \"Your Email\"\n          },\n          value: \"\",\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false\n        },\n        deliveryMethod: {\n          elementType: \"select\",\n          elementConfig: {\n            options: [\n              { value: \"fastest\", displayValue: \"Fastest\" },\n              { value: \"cheapest\", displayValue: \"Cheapest\" }\n            ]\n          },\n          value: \"fastest\",\n          validation: {},\n          valid: true\n        }\n      },\n      formIsValid: false\n    };\n  }\n\n  // Handle order submission.\n  orderHandler = event => {\n    // Prevent default form behavior.\n    event.preventDefault();\n    // Extract form data.\n    const formData = {};\n    for (let formElementId in this.state.orderForm) {\n      formData[formElementId] = this.state.orderForm[formElementId].value;\n    }\n    const order = {\n      ingredients: this.props.ingredients,\n      price: this.props.totalPrice,\n      orderData: formData,\n      userId: this.props.userId\n    };\n    this.props.onOrderBurger(order, this.props.token);\n  };\n\n  // Check validity of each form input field.\n  checkInputValidity(value, rules) {\n    let isValid = true;\n    if (rules.required) {\n      isValid = value.trim() !== \"\" && isValid;\n    }\n\n    if (rules.minLength) {\n      isValid = value.length >= rules.minLength && isValid;\n    }\n\n    if (rules.maxLength) {\n      isValid = value.length <= rules.maxLength && isValid;\n    }\n    return isValid;\n  }\n\n  // Update state when form is changed.\n  inputChangeHandler = (event, inputId) => {\n    const updatedOrderForm = {\n      ...this.state.orderForm\n    };\n    // Deep copy the selected form element.\n    const updatedFormElement = {\n      ...updatedOrderForm[inputId]\n    };\n    updatedFormElement.value = event.target.value;\n    updatedFormElement.valid = this.checkInputValidity(\n      updatedFormElement.value,\n      updatedFormElement.validation\n    );\n    updatedFormElement.touched = true;\n    updatedOrderForm[inputId] = updatedFormElement;\n    // Update overall form validity.\n    let formIsValid = true;\n    for (let inputId in updatedOrderForm) {\n      formIsValid = updatedOrderForm[inputId].valid && formIsValid;\n    }\n    // Update the state.\n    this.setState({\n      orderForm: updatedOrderForm,\n      formIsValid: formIsValid\n    });\n  };\n\n  render() {\n    const formElementsArray = [];\n    for (let key in this.state.orderForm) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.orderForm[key]\n      });\n    }\n\n    let form = (\n      <form onSubmit={this.orderHandler}>\n        {formElementsArray.map(formElement => {\n          return (\n            <Input\n              key={formElement.id}\n              elementType={formElement.config.elementType}\n              elementConfig={formElement.config.elementConfig}\n              value={formElement.config.value}\n              invalid={!formElement.config.valid}\n              shouldValidate={formElement.config.validation}\n              touched={formElement.config.touched}\n              changed={event => this.inputChangeHandler(event, formElement.id)}\n            />\n          );\n        })}\n        <Button btnType=\"Success\" disabled={!this.state.formIsValid}>\n          ORDER\n        </Button>\n      </form>\n    );\n    if (this.props.loading) {\n      form = <Spinner />;\n    }\n\n    return (\n      <div className={classes.ContactData}>\n        <h4>Enter your Contact Data</h4>\n        {form}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    ingredients: state.burgerBuilder.ingredients,\n    totalPrice: state.burgerBuilder.totalPrice,\n    loading: state.order.loading,\n    token: state.auth.token,\n    userId: state.auth.userId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onOrderBurger: (orderData, token) =>\n      dispatch(actions.purchaseBurger(orderData, token))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withErrorHandler(ContactData, axios));\n","import React, { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n// Components.\nimport CheckoutSummary from \"../../components/Order/Checkout/CheckoutSummary/CheckoutSummary\";\nimport ContactData from \"./ContactData/ContactData\";\n\nclass Checkout extends Component {\n  checkoutCancelHandler = () => {\n    this.props.history.goBack();\n  };\n\n  checkoutContinueHandler = () => {\n    this.props.history.replace(\"/checkout/contact-data\");\n  };\n\n  render() {\n    let summary = <Redirect to=\"/\" />;\n    if (this.props.ingredients) {\n      const purchasedRedirect = this.props.purchased ? (\n        <Redirect to=\"/\" />\n      ) : null;\n      summary = (\n        <div>\n          {purchasedRedirect}\n          <CheckoutSummary\n            ingredients={this.props.ingredients}\n            cancel={this.checkoutContinueHandler}\n            continue={this.checkoutContinueHandler}\n          />\n          <Route\n            path={this.props.match.path + \"/contact-data\"}\n            component={ContactData}\n          />\n        </div>\n      );\n    }\n    return summary;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    ingredients: state.burgerBuilder.ingredients,\n    purchased: state.order.purchased\n  };\n};\n\nexport default connect(mapStateToProps)(Checkout);\n","import React from \"react\";\nimport classes from \"./Order.module.css\";\n\nfunction Order(props) {\n  const ingredients = [];\n\n  for (let ingredientName in props.ingredients) {\n    ingredients.push({\n      name: ingredientName,\n      amount: props.ingredients[ingredientName]\n    });\n  }\n\n  const ingredientOutput = ingredients.map(ingredient => {\n    return (\n      <span className={classes.OrderInfo} key={ingredient.name}>\n        {ingredient.name} ({ingredient.amount})\n      </span>\n    );\n  });\n\n  return (\n    <div className={classes.Order}>\n      <p>{ingredientOutput}</p>\n      <p>\n        Price <strong>USD {Number.parseFloat(props.price.toFixed(2))}</strong>\n      </p>\n    </div>\n  );\n}\n\nexport default Order;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Order from \"../../components/Order/Order\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport axios from \"../../axios-orders\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\nimport * as actions from \"../../store/actions/index\";\n\nclass Orders extends Component {\n  componentDidMount() {\n    this.props.onFetchOrders(this.props.token, this.props.userId);\n  }\n\n  render() {\n    let orders = <Spinner />;\n    if (!this.props.loading) {\n      orders = this.props.orders.map(order => {\n        return (\n          <Order\n            key={order.id}\n            ingredients={order.ingredients}\n            price={order.price}\n          ></Order>\n        );\n      });\n    }\n    return <div>{orders}</div>;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    orders: state.order.orders,\n    loading: state.order.loading,\n    token: state.auth.token,\n    userId: state.auth.userId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFetchOrders: (token, userId) =>\n      dispatch(actions.fetchOrders(token, userId))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withErrorHandler(Orders, axios));\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n// Components.\nimport Input from \"../../components/UI/Input/Input\";\nimport Button from \"../../components/UI/Button/Button\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\n// CSS classes.\nimport classes from \"./Auth.module.css\";\n// Redux actions.\nimport * as actions from \"../../store/actions/index\";\n\nclass Auth extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      controls: {\n        email: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"email\",\n            placeholder: \"Your Email\"\n          },\n          value: \"\",\n          validation: {\n            required: true,\n            isEmail: true\n          },\n          valid: false,\n          touched: false\n        },\n        password: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"password\",\n            placeholder: \"Your Password\"\n          },\n          value: \"\",\n          validation: {\n            required: true,\n            minLength: 7\n          },\n          valid: false,\n          touched: false\n        }\n      },\n      formIsValid: false,\n      isSignup: true\n    };\n  }\n\n  componentDidMount() {\n    if (!this.props.buildingBurger && this.props.authRedirectPath !== \"/\") {\n      this.props.onSetAuthRedirectPath();\n    }\n  }\n\n  // Check validity of each form input field.\n  checkInputValidity(value, rules) {\n    let isValid = true;\n    if (rules.required) {\n      isValid = value.trim() !== \"\" && isValid;\n    }\n\n    if (rules.minLength) {\n      isValid = value.length >= rules.minLength && isValid;\n    }\n\n    if (rules.maxLength) {\n      isValid = value.length <= rules.maxLength && isValid;\n    }\n    return isValid;\n  }\n\n  // Update state when form is changed.\n  inputChangeHandler = (event, controlName) => {\n    const updatedControls = {\n      ...this.state.controls,\n      [controlName]: {\n        ...this.state.controls[controlName],\n        value: event.target.value,\n        valid: this.checkInputValidity(\n          event.target.value,\n          this.state.controls[controlName].validation\n        ),\n        touched: true\n      }\n    };\n    this.setState({\n      controls: updatedControls\n    });\n  };\n\n  submitHandler = event => {\n    event.preventDefault();\n    this.props.onAuth(\n      this.state.controls.email.value,\n      this.state.controls.password.value,\n      this.state.isSignup\n    );\n  };\n\n  switchAuthModelHandler = () => {\n    this.setState(prevState => {\n      return {\n        isSignup: !prevState.isSignup\n      };\n    });\n  };\n\n  render() {\n    const formElementsArray = [];\n    for (let key in this.state.controls) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.controls[key]\n      });\n    }\n\n    let form = (\n      <form onSubmit={this.submitHandler}>\n        {formElementsArray.map(formElement => {\n          return (\n            <Input\n              key={formElement.id}\n              elementType={formElement.config.elementType}\n              elementConfig={formElement.config.elementConfig}\n              value={formElement.config.value}\n              invalid={!formElement.config.valid}\n              shouldValidate={formElement.config.validation}\n              touched={formElement.config.touched}\n              changed={event => this.inputChangeHandler(event, formElement.id)}\n            />\n          );\n        })}\n        <Button btnType=\"Success\">\n          {this.state.isSignup ? \"Sign Up\" : \"Login\"}\n        </Button>\n      </form>\n    );\n\n    if (this.props.loading) {\n      form = <Spinner />;\n    }\n\n    let errorMessage = null;\n\n    if (this.props.error) {\n      errorMessage = <p>{this.props.error}</p>;\n    }\n\n    let authRedirect = null;\n    if (this.props.isAuthenticated) {\n      authRedirect = <Redirect to={this.props.authRedirectPath} />;\n    }\n\n    return (\n      <div className={classes.Auth}>\n        {authRedirect}\n        {errorMessage}\n        {form}\n        <Button btnType=\"Danger\" clicked={this.switchAuthModelHandler}>\n          Switch to {this.state.isSignup ? \"Login\" : \"Sign Up\"}\n        </Button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error,\n    isAuthenticated: state.auth.token !== null,\n    buildingBurger: state.burgerBuilder.isBuilding,\n    authRedirectPath: state.auth.authRedirectPath\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (email, password, isSignup) =>\n      dispatch(actions.auth(email, password, isSignup)),\n    onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath(\"/\"))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Auth);\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport * as actions from \"../../../store/actions/index\";\nimport { connect } from \"react-redux\";\n\nclass Logout extends Component {\n  componentDidMount() {\n    this.props.onLogout();\n  }\n\n  render() {\n    return <Redirect to=\"/\" />;\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onLogout: () => dispatch(actions.logout())\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Logout);\n","import React, { Component } from \"react\";\nimport { Route, Switch, withRouter, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"./store/actions/index\";\n// Components.\nimport Layout from \"./components/Layout/Layout\";\nimport BurgerBuilder from \"./containers/BurgerBuilder/BurgerBuilder\";\nimport Checkout from \"./containers/Checkout/Checkout\";\nimport Orders from \"./containers/Orders/Orders\";\nimport Auth from \"./containers/Auth/Auth\";\nimport Logout from \"./containers/Auth/Logout/Logout\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n  }\n\n  render() {\n    let routes = (\n      <Switch>\n        <Route path=\"/auth\" exact component={Auth} />\n        <Route path=\"/\" exact component={BurgerBuilder} />\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n\n    if (this.props.isAuthenticated) {\n      routes = (\n        <Switch>\n          <Route path=\"/checkout\" component={Checkout} />\n          <Route path=\"/orders\" exact component={Orders} />\n          <Route path=\"/logout\" exact component={Logout} />\n          <Route path=\"/\" exact component={BurgerBuilder} />\n          <Redirect to=\"/\" />\n        </Switch>\n      );\n    }\n    return <Layout>{routes}</Layout>;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(App)\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from \"../actions/actionTypes\";\n\n// Initial State.\nconst initialState = {\n  ingredients: null,\n  totalPrice: 0,\n  error: false,\n  isBuilding: false\n};\n\n// Prices for each ingredient.\nconst INGREDIENT_PRICES = {\n  salad: 1,\n  bacon: 2,\n  cheese: 1.5,\n  meat: 2\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    // Add ingredient.\n    case actionTypes.ADD_INGREDIENT:\n      return {\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n        ingredients: {\n          ...state.ingredients,\n          [action.ingredientName]: state.ingredients[action.ingredientName] + 1,\n          isBuilding: true\n        }\n      };\n    // Remove ingredient.\n    case actionTypes.REMOVE_INGREDIENT:\n      return {\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\n        ingredients: {\n          ...state.ingredients,\n          [action.ingredientName]: state.ingredients[action.ingredientName] - 1,\n          isBuilding: true\n        }\n      };\n    // Reset ingredient.\n    case actionTypes.SET_INGREDIENTS:\n      return {\n        ...state,\n        ingredients: action.ingredients,\n        totalPrice: 0,\n        error: false,\n        isBuilding: false\n      };\n    // Handle case when fetching ingredients from firebase is failed.\n    case actionTypes.FETCH_INGREDIENTS_FAILED:\n      return {\n        ...state,\n        error: true\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as actionTypes from \"../actions/actionTypes\";\n\n// Initial State.\nconst initialState = {\n  orders: [],\n  loading: false,\n  purchased: false\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    // Update loading state when fetching orders starts.\n    case actionTypes.FETCH_ORDERS_START:\n      return {\n        ...state,\n        loading: true\n      };\n    // Update loading and orders state when fetching orders succeeds.\n    case actionTypes.FETCH_ORDERS_SUCCESS:\n      return {\n        ...state,\n        orders: action.orders,\n        loading: false\n      };\n    // Update loading state when fetching orders fails.\n    case actionTypes.FETCH_ORDERS_FAIL:\n      return {\n        ...state,\n        loading: false\n      };\n    // Update purchased state when purchasing initializes.\n    case actionTypes.PURCHASE_INIT:\n      return {\n        ...state,\n        purchased: false\n      };\n    // Update states when purchasing succeeds.\n    case actionTypes.PURCHASE_BURGER_SUCCESS:\n      const newOrder = {\n        ...action.orderData,\n        id: action.orderId\n      };\n      return {\n        ...state,\n        loading: false,\n        purchased: true,\n        orders: state.orders.concat(newOrder)\n      };\n    // Update loading state when purchasing starts.\n    case actionTypes.PURCHASE_BURGER_START:\n      return {\n        ...state,\n        loading: true\n      };\n    // Update loading state when purchasing fails.\n    case actionTypes.PURCHASE_BURGER_FAIL:\n      return {\n        ...state,\n        loading: false\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  token: null,\n  userId: null,\n  error: null,\n  loading: false,\n  authRedirectPath: \"/\"\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      return {\n        ...state,\n        loading: true\n      };\n\n    case actionTypes.AUTH_SUCCESS:\n      return {\n        token: action.idToken,\n        userId: action.userId,\n        error: null,\n        loading: false\n      };\n\n    case actionTypes.AUTH_FAIL:\n      return {\n        ...state,\n        error: action.error,\n        loading: false\n      };\n    case actionTypes.AUTH_LOGOUT:\n      return {\n        ...state,\n        token: null,\n        userId: null\n      };\n    case actionTypes.SET_AUTH_REDIRECT_PATH:\n      return {\n        ...state,\n        authRedirectPath: action.path\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport burgerBuilderReducer from \"./store/reducers/burgerBuilder\";\nimport orderReducer from \"./store/reducers/order\";\nimport authReducer from \"./store/reducers/auth\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  burgerBuilder: burgerBuilderReducer,\n  order: orderReducer,\n  auth: authReducer\n});\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}